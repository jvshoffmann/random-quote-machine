[{"C:\\Users\\João\\Documents\\projects\\random-quote-machine\\src\\index.js":"1","C:\\Users\\João\\Documents\\projects\\random-quote-machine\\src\\App.js":"2","C:\\Users\\João\\Documents\\projects\\random-quote-machine\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":2130,"mtime":1611145447793,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ukhlma",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\João\\Documents\\projects\\random-quote-machine\\src\\index.js",[],["16","17"],"C:\\Users\\João\\Documents\\projects\\random-quote-machine\\src\\App.js",["18"],"import './App.css';\nimport React from \"react\"\n\nfunction TwitterButton(props){\n  \n  let link = encodeURI(\"https://twitter.com/intent/tweet?text=\"+props.quote);\n  console.log(link)\n  return (\n  <a \n    target = \"_blank\"\n    className = \"button\"\n    id = \"tweet-quote\"\n    href = {link}\n  >\n    tweet quote\n  </a>);\n}\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      quoteIndex: 0,\n      quotes: []\n    }\n  }\n  getRandomQuote(quotes){\n    return Math.floor(Math.random()*quotes.length);    \n }\n  changeQuote = () => {\n    this.setState({\n      ...this.state,\n      quoteIndex: this.getRandomQuote(this.state.quotes)      \n    })\n  }\n  componentDidMount(){\n    fetch(\"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\")\n    .then(response=>response.json())\n    .then((jsonData)=>{\n      let quoteIndex = this.getRandomQuote(jsonData.quotes);\n      this.setState({\n        quoteIndex,\n        quotes: jsonData.quotes\n      })})\n    }\n    // createTweetLink(){\n    //   return \"twitter.com/intent/tweet?text=\"+this.state.quotes[this.state.quoteIndex].textContent\n    // }\n   \n    render(){\n      if(this.state.quotes.length === 0)\n        return null;\n      else{\n        return (\n        <div id = \"quote-box\">\n          <div id = \"text\">\n            {this.state.quotes[this.state.quoteIndex].quote}\n          </div>\n          <div id = \"author\">\n            -{this.state.quotes[this.state.quoteIndex].author}\n          </div>\n          <TwitterButton quote = {this.state.quotes[this.state.quoteIndex].quote}/>\n          <button id = \"new-quote\" onClick = {this.changeQuote}>Get new quote</button>\n          {/* <a target = \"_blank\" class = \"button\" id = \"tweet-quote\"onClick = \"location.href = '#'\" href = {this.createTweetLink}>Share on twitter</a> */}\n        </div>\n        )};      \n    }\n  \n}\n\n\n\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n                     \n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","C:\\Users\\João\\Documents\\projects\\random-quote-machine\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":9,"column":3,"nodeType":"25","endLine":14,"endColumn":4},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]